[{"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\index.js":"1","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\reportWebVitals.js":"2","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\App.js":"3","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Count.js":"4","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Mood.js":"5","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\emailref.js":"6","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\ToggleableForm.js":"7","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reduceexample.js":"8","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\DarkMode.js":"9","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reducefetch.js":"10"},{"size":574,"mtime":1611249984574,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":666,"mtime":1610333961992,"results":"14","hashOfConfig":"12"},{"size":1040,"mtime":1609907725387,"results":"15","hashOfConfig":"12"},{"size":909,"mtime":1610073662740,"results":"16","hashOfConfig":"12"},{"size":709,"mtime":1610073666396,"results":"17","hashOfConfig":"12"},{"size":2871,"mtime":1610557234940,"results":"18","hashOfConfig":"12"},{"size":1088,"mtime":1611162364279,"results":"19","hashOfConfig":"12"},{"size":3884,"mtime":1611249411153,"results":"20","hashOfConfig":"12"},{"size":1698,"mtime":1611250680323,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vp5svh",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\index.js",["45","46","47","48","49","50"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\reportWebVitals.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\App.js",[],["51","52"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Count.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Mood.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\emailref.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\ToggleableForm.js",["53","54"],"import React, { useState, useRef, forwardRef, useEffect, createElement } from 'react';\r\n\r\n\r\n// Overall, you want to be able to switch between forms.\r\n// 1) Turn the Login/Signup forms into controlled components\r\n// 2) Make just one form show up at a time\r\n// 3) Make the buttons toggle which component is rendered\r\n// 4) Forward the ref from the ToggleableForm to the components\r\n// 5) Make a form's first input focused when it is active using a side effect\r\n\r\nconst Toggleable = () => {\r\n  let data = [\r\n    { name: 'Log in', component: LoginForm },\r\n    { name: 'Sign up', component: SignupForm }\r\n  ]\r\n  return (\r\n    <section>\r\n      <h2>Log in / Sign up</h2>\r\n      <ToggleableForm options={data} />\r\n    </section>\r\n  )\r\n}\r\nexport default Toggleable\r\n\r\nconst ToggleableForm = ({ options }) => {\r\n  const [currentForm, setCurrentForm] = useState(0)\r\n  let focusRef = useRef(null)\r\n  \r\n  return <>\r\n    {options.map((el, index) => {\r\n      return <ButtonToggle key={`button${index}`} toggleForm={() => {\r\n        setCurrentForm(index)\r\n      }}>{el.name}</ButtonToggle>\r\n    })}\r\n    <FormToggle currentIndex={currentForm}>\r\n      {options.map((el, index) => {\r\n        return <div key={`form${index}`}>\r\n          {createElement(el.component, { ref: focusRef })}\r\n        </div>\r\n      })}\r\n    </FormToggle>\r\n  </>\r\n}\r\n\r\nconst ButtonToggle = ({ children, toggleRef, toggleForm }) => {\r\n  return <button onClick={() => {\r\n    toggleForm()\r\n  }}>{children}</button>\r\n}\r\n\r\nconst FormToggle = ({ children, currentIndex }) => {\r\n  if (Array.isArray(children)) {\r\n    return <div>{children[currentIndex]}</div>\r\n  }\r\n  return null\r\n}\r\n\r\nconst LoginForm = forwardRef((props, ref) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  useEffect(() => {\r\n    ref.current.focus()\r\n  }, [])\r\n  \r\n  return <>\r\n    <input type=\"text\" value={username} ref={ref} placeholder=\"Username\" onChange={(e) => {\r\n      setUsername(e.target.value)\r\n    }} />\r\n    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {\r\n      setPassword(e.target.value)\r\n    }} />\r\n    <button>Submit</button>\r\n  </>\r\n})\r\n\r\nconst SignupForm = forwardRef((props, ref) => {\r\n  const [email, setEmail] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  useEffect(() => {\r\n    ref.current.focus()\r\n  }, [])\r\n  \r\n  return <>\r\n    <input type=\"email\" value={email} ref={ref} placeholder=\"Email\" onChange={(e) => {\r\n      setEmail(e.target.value)\r\n    }} />\r\n    <input type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => {\r\n      setUsername(e.target.value)\r\n    }} />\r\n    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {\r\n      setPassword(e.target.value)\r\n    }} />\r\n    <button>Submit</button>\r\n  </>\r\n})\r\n\r\n","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reduceexample.js",["55"],"import React, { useReducer } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction useCounter() {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch(action.type) {\r\n      case 'INCREMENT': {\r\n        return { ...state, count: state.count + 1 }\r\n      }\r\n      case 'DECREMENT': {\r\n        return { ...state, count: state.count - 1 }\r\n      }\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }, {\r\n    count: 0\r\n  })\r\n  \r\n  return [state, dispatch]\r\n}\r\n\r\nconst Reduceexample = () => {\r\n  const [state, dispatch] = useCounter()\r\n  \r\n  let { count } = state\r\n  \r\n  const add = () => {\r\n    dispatch({ type: 'INCREMENT' })\r\n  }\r\n  \r\n  const subtract = () => {\r\n    if (count > 0) {\r\n      dispatch({ type: 'DECREMENT' })\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <section>\r\n      <h2>Counter: The Most Novel Example I Could Come Up With</h2>\r\n      <div className=\"counter\">\r\n        <button onClick={subtract}>-</button>\r\n        <div>{count}</div>\r\n        <button onClick={add}>+</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Reduceexample;","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\DarkMode.js",["56","57"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reducefetch.js",["58","59","60"],{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":11},{"ruleId":"61","severity":1,"message":"65","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":12},{"ruleId":"61","severity":1,"message":"67","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":16},{"ruleId":"61","severity":1,"message":"68","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":18},{"ruleId":"61","severity":1,"message":"69","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":21},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":64,"column":6,"nodeType":"76","endLine":64,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"75","line":84,"column":6,"nodeType":"76","endLine":84,"endColumn":8,"suggestions":"78"},{"ruleId":"61","severity":1,"message":"79","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"80","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"79","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"79","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"81","line":13,"column":7,"nodeType":"63","messageId":"64","endLine":13,"endColumn":11},{"ruleId":"61","severity":1,"message":"82","line":13,"column":13,"nodeType":"63","messageId":"64","endLine":13,"endColumn":20},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Count' is defined but never used.","'Mood' is defined but never used.","'FrmEmail' is defined but never used.","'Toggleable' is defined but never used.","'Reduceexample' is defined but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["85"],["86"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},"Update the dependencies array to be: [ref]",{"range":"90","text":"91"},{"range":"92","text":"91"},[1836,1838],"[ref]",[2414,2416]]