[{"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\index.js":"1","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\reportWebVitals.js":"2","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\App.js":"3","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Count.js":"4","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Mood.js":"5","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\emailref.js":"6","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\ToggleableForm.js":"7","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reduceexample.js":"8","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\DarkMode.js":"9","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reducefetch.js":"10","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Accordian.js":"11"},{"size":632,"mtime":1611421709364,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":666,"mtime":1610333961992,"results":"15","hashOfConfig":"13"},{"size":1040,"mtime":1609907725387,"results":"16","hashOfConfig":"13"},{"size":909,"mtime":1610073662740,"results":"17","hashOfConfig":"13"},{"size":709,"mtime":1610073666396,"results":"18","hashOfConfig":"13"},{"size":2871,"mtime":1610557234940,"results":"19","hashOfConfig":"13"},{"size":1088,"mtime":1611162364279,"results":"20","hashOfConfig":"13"},{"size":3884,"mtime":1611249411153,"results":"21","hashOfConfig":"13"},{"size":1698,"mtime":1611250680323,"results":"22","hashOfConfig":"13"},{"size":2235,"mtime":1611422176730,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vp5svh",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\index.js",["50","51","52","53","54","55","56"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\reportWebVitals.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\App.js",[],["57","58"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Count.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Mood.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\emailref.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\ToggleableForm.js",["59","60"],"import React, { useState, useRef, forwardRef, useEffect, createElement } from 'react';\r\n\r\n\r\n// Overall, you want to be able to switch between forms.\r\n// 1) Turn the Login/Signup forms into controlled components\r\n// 2) Make just one form show up at a time\r\n// 3) Make the buttons toggle which component is rendered\r\n// 4) Forward the ref from the ToggleableForm to the components\r\n// 5) Make a form's first input focused when it is active using a side effect\r\n\r\nconst Toggleable = () => {\r\n  let data = [\r\n    { name: 'Log in', component: LoginForm },\r\n    { name: 'Sign up', component: SignupForm }\r\n  ]\r\n  return (\r\n    <section>\r\n      <h2>Log in / Sign up</h2>\r\n      <ToggleableForm options={data} />\r\n    </section>\r\n  )\r\n}\r\nexport default Toggleable\r\n\r\nconst ToggleableForm = ({ options }) => {\r\n  const [currentForm, setCurrentForm] = useState(0)\r\n  let focusRef = useRef(null)\r\n  \r\n  return <>\r\n    {options.map((el, index) => {\r\n      return <ButtonToggle key={`button${index}`} toggleForm={() => {\r\n        setCurrentForm(index)\r\n      }}>{el.name}</ButtonToggle>\r\n    })}\r\n    <FormToggle currentIndex={currentForm}>\r\n      {options.map((el, index) => {\r\n        return <div key={`form${index}`}>\r\n          {createElement(el.component, { ref: focusRef })}\r\n        </div>\r\n      })}\r\n    </FormToggle>\r\n  </>\r\n}\r\n\r\nconst ButtonToggle = ({ children, toggleRef, toggleForm }) => {\r\n  return <button onClick={() => {\r\n    toggleForm()\r\n  }}>{children}</button>\r\n}\r\n\r\nconst FormToggle = ({ children, currentIndex }) => {\r\n  if (Array.isArray(children)) {\r\n    return <div>{children[currentIndex]}</div>\r\n  }\r\n  return null\r\n}\r\n\r\nconst LoginForm = forwardRef((props, ref) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  useEffect(() => {\r\n    ref.current.focus()\r\n  }, [])\r\n  \r\n  return <>\r\n    <input type=\"text\" value={username} ref={ref} placeholder=\"Username\" onChange={(e) => {\r\n      setUsername(e.target.value)\r\n    }} />\r\n    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {\r\n      setPassword(e.target.value)\r\n    }} />\r\n    <button>Submit</button>\r\n  </>\r\n})\r\n\r\nconst SignupForm = forwardRef((props, ref) => {\r\n  const [email, setEmail] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  useEffect(() => {\r\n    ref.current.focus()\r\n  }, [])\r\n  \r\n  return <>\r\n    <input type=\"email\" value={email} ref={ref} placeholder=\"Email\" onChange={(e) => {\r\n      setEmail(e.target.value)\r\n    }} />\r\n    <input type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => {\r\n      setUsername(e.target.value)\r\n    }} />\r\n    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {\r\n      setPassword(e.target.value)\r\n    }} />\r\n    <button>Submit</button>\r\n  </>\r\n})\r\n\r\n","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reduceexample.js",["61"],"import React, { useReducer } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nfunction useCounter() {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch(action.type) {\r\n      case 'INCREMENT': {\r\n        return { ...state, count: state.count + 1 }\r\n      }\r\n      case 'DECREMENT': {\r\n        return { ...state, count: state.count - 1 }\r\n      }\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }, {\r\n    count: 0\r\n  })\r\n  \r\n  return [state, dispatch]\r\n}\r\n\r\nconst Reduceexample = () => {\r\n  const [state, dispatch] = useCounter()\r\n  \r\n  let { count } = state\r\n  \r\n  const add = () => {\r\n    dispatch({ type: 'INCREMENT' })\r\n  }\r\n  \r\n  const subtract = () => {\r\n    if (count > 0) {\r\n      dispatch({ type: 'DECREMENT' })\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <section>\r\n      <h2>Counter: The Most Novel Example I Could Come Up With</h2>\r\n      <div className=\"counter\">\r\n        <button onClick={subtract}>-</button>\r\n        <div>{count}</div>\r\n        <button onClick={add}>+</button>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Reduceexample;","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\DarkMode.js",["62","63"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reducefetch.js",["64","65","66"],"import React, { useEffect, useReducer, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n/*\r\n\r\nfetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(json => console.log(json))\r\n\r\n*/\r\n\r\nconst Reducefetch = () => {\r\n let [user, setUser] = useState(null);\r\n  let [state, dispatch] = useReducer((state, action) => {\r\n    switch(action.type) {\r\n      case 'LOADING': {\r\n        return { ...state, loading: true }\r\n      }\r\n      case 'RESOLVED': {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          response: action.response,\r\n          error: null\r\n        }\r\n      }\r\n      case 'ERROR': {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          response: null,\r\n          error: action.error\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }, {\r\n    loading: false,\r\n    response: null,\r\n    error: null\r\n  })\r\n  \r\n  \r\n  useEffect(() => {\r\n    let isCurrent = true\r\n    dispatch({ type: \"LOADING\" })\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (isCurrent) {\r\n          dispatch({ type: \"RESOLVED\", response: json })\r\n        }\r\n      }).catch(error => {\r\n        dispatch({ type: \"ERROR\", error })\r\n      })\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [])\r\n  \r\n  let { response } = state\r\n  \r\n  return (\r\n    <section>\r\n      <h2>Get User Data</h2>\r\n      <div className=\"user\">\r\n        {response && <>\r\n          User ID: {response.id} <br />\r\n          User Title: {response.title}\r\n        </>}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\nexport default Reducefetch;\r\n","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Accordian.js",[],{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":11},{"ruleId":"67","severity":1,"message":"71","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":13},{"ruleId":"67","severity":1,"message":"72","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":12},{"ruleId":"67","severity":1,"message":"73","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":16},{"ruleId":"67","severity":1,"message":"74","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":18},{"ruleId":"67","severity":1,"message":"75","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":21},{"ruleId":"67","severity":1,"message":"76","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":19},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":64,"column":6,"nodeType":"83","endLine":64,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"82","line":84,"column":6,"nodeType":"83","endLine":84,"endColumn":8,"suggestions":"85"},{"ruleId":"67","severity":1,"message":"86","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"87","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"86","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"86","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"88","line":13,"column":7,"nodeType":"69","messageId":"70","endLine":13,"endColumn":11},{"ruleId":"67","severity":1,"message":"89","line":13,"column":13,"nodeType":"69","messageId":"70","endLine":13,"endColumn":20},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Count' is defined but never used.","'Mood' is defined but never used.","'FrmEmail' is defined but never used.","'Toggleable' is defined but never used.","'Reduceexample' is defined but never used.","'Reducefetch' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["92"],["93"],"'ReactDOM' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},"Update the dependencies array to be: [ref]",{"range":"97","text":"98"},{"range":"99","text":"98"},[1836,1838],"[ref]",[2414,2416]]