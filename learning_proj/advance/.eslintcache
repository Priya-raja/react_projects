[{"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\index.js":"1","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\reportWebVitals.js":"2","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\App.js":"3","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Count.js":"4","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Mood.js":"5","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\emailref.js":"6","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\ToggleableForm.js":"7","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reduceexample.js":"8"},{"size":451,"mtime":1610643394887,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":666,"mtime":1610333961992,"results":"12","hashOfConfig":"10"},{"size":1040,"mtime":1609907725387,"results":"13","hashOfConfig":"10"},{"size":909,"mtime":1610073662740,"results":"14","hashOfConfig":"10"},{"size":709,"mtime":1610073666396,"results":"15","hashOfConfig":"10"},{"size":2871,"mtime":1610557234940,"results":"16","hashOfConfig":"10"},{"size":1088,"mtime":1611162364279,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"vp5svh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\index.js",["37","38","39","40","41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Count from './Count';\nimport Mood from './Mood';\nimport FrmEmail from './emailref';\nimport Toggleable from './ToggleableForm'\nimport './App.css';\nimport Reduceexample from './Reduceexample'\n\nReactDOM.render(\n  // <App />,\n  //  <Count />,\n  //  <Mood />,\n  //  <FrmEmail />,\n    // <Toggleable/>,\n    <Reduceexample/>,\n  document.getElementById('root')\n)\n   ",["42","43"],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\reportWebVitals.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\App.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Count.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Mood.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\emailref.js",[],"F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\ToggleableForm.js",["44","45"],"import React, { useState, useRef, forwardRef, useEffect, createElement } from 'react';\r\n\r\n\r\n// Overall, you want to be able to switch between forms.\r\n// 1) Turn the Login/Signup forms into controlled components\r\n// 2) Make just one form show up at a time\r\n// 3) Make the buttons toggle which component is rendered\r\n// 4) Forward the ref from the ToggleableForm to the components\r\n// 5) Make a form's first input focused when it is active using a side effect\r\n\r\nconst Toggleable = () => {\r\n  let data = [\r\n    { name: 'Log in', component: LoginForm },\r\n    { name: 'Sign up', component: SignupForm }\r\n  ]\r\n  return (\r\n    <section>\r\n      <h2>Log in / Sign up</h2>\r\n      <ToggleableForm options={data} />\r\n    </section>\r\n  )\r\n}\r\nexport default Toggleable\r\n\r\nconst ToggleableForm = ({ options }) => {\r\n  const [currentForm, setCurrentForm] = useState(0)\r\n  let focusRef = useRef(null)\r\n  \r\n  return <>\r\n    {options.map((el, index) => {\r\n      return <ButtonToggle key={`button${index}`} toggleForm={() => {\r\n        setCurrentForm(index)\r\n      }}>{el.name}</ButtonToggle>\r\n    })}\r\n    <FormToggle currentIndex={currentForm}>\r\n      {options.map((el, index) => {\r\n        return <div key={`form${index}`}>\r\n          {createElement(el.component, { ref: focusRef })}\r\n        </div>\r\n      })}\r\n    </FormToggle>\r\n  </>\r\n}\r\n\r\nconst ButtonToggle = ({ children, toggleRef, toggleForm }) => {\r\n  return <button onClick={() => {\r\n    toggleForm()\r\n  }}>{children}</button>\r\n}\r\n\r\nconst FormToggle = ({ children, currentIndex }) => {\r\n  if (Array.isArray(children)) {\r\n    return <div>{children[currentIndex]}</div>\r\n  }\r\n  return null\r\n}\r\n\r\nconst LoginForm = forwardRef((props, ref) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  useEffect(() => {\r\n    ref.current.focus()\r\n  }, [])\r\n  \r\n  return <>\r\n    <input type=\"text\" value={username} ref={ref} placeholder=\"Username\" onChange={(e) => {\r\n      setUsername(e.target.value)\r\n    }} />\r\n    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {\r\n      setPassword(e.target.value)\r\n    }} />\r\n    <button>Submit</button>\r\n  </>\r\n})\r\n\r\nconst SignupForm = forwardRef((props, ref) => {\r\n  const [email, setEmail] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  useEffect(() => {\r\n    ref.current.focus()\r\n  }, [])\r\n  \r\n  return <>\r\n    <input type=\"email\" value={email} ref={ref} placeholder=\"Email\" onChange={(e) => {\r\n      setEmail(e.target.value)\r\n    }} />\r\n    <input type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => {\r\n      setUsername(e.target.value)\r\n    }} />\r\n    <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => {\r\n      setPassword(e.target.value)\r\n    }} />\r\n    <button>Submit</button>\r\n  </>\r\n})\r\n\r\n","F:\\100daysReact\\react_projects\\learning_proj\\advance\\src\\Reduceexample.js",["46"],{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":11},{"ruleId":"47","severity":1,"message":"51","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":12},{"ruleId":"47","severity":1,"message":"53","line":6,"column":8,"nodeType":"49","messageId":"50","endLine":6,"endColumn":16},{"ruleId":"47","severity":1,"message":"54","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":18},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":64,"column":6,"nodeType":"61","endLine":64,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"60","line":84,"column":6,"nodeType":"61","endLine":84,"endColumn":8,"suggestions":"63"},{"ruleId":"47","severity":1,"message":"64","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Count' is defined but never used.","'Mood' is defined but never used.","'FrmEmail' is defined but never used.","'Toggleable' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array.","ArrayExpression",["67"],["68"],"'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"69","fix":"71"},"Update the dependencies array to be: [ref]",{"range":"72","text":"73"},{"range":"74","text":"73"},[1836,1838],"[ref]",[2414,2416]]